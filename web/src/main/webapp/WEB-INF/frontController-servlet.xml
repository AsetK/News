<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:ctx="http://www.springframework.org/schema/context"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
  http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
  http://www.springframework.org/schema/mvc
  http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
  http://www.springframework.org/schema/context
  http://www.springframework.org/schema/context/spring-context-2.5.xsd
  http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
  ">
    <ctx:annotation-config></ctx:annotation-config>
    <ctx:component-scan base-package="com.epam.news"></ctx:component-scan>

    <tx:annotation-driven transaction-manager="txManager"/>

    <!-- For @DateTimeFormat -->
    <mvc:annotation-driven/>

    <mvc:interceptors>
        <!-- Localization Interceptor. Intercepts request parameter value from client. Parameter name in this example is siteLanguage -->
        <!-- Doesn't used here, because we dont <spring:message code="..." in view/> -->
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <property name="paramName" value="siteLanguage"/>
        </bean>
    </mvc:interceptors>


    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix">
            <value>/WEB-INF/</value>
        </property>
        <property name="suffix">
            <value>.jsp</value>
        </property>
    </bean>

    <!-- MessageSource from property file. For Localization -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="/WEB-INF/newsmessages" />
    </bean>

    <!-- Localization. It's mandatory for LocaleChangeInterceptor work. It's obtain current locale from cookie-->
    <!-- Doesn't used here, because we dont <spring:message code="..." in view/> -->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver"/>

    <!-- For @Transactional annotation in DAO -->
    <bean id="txManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- SessionFactory bean for DAO -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="com.epam.news.domain.entity"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
                <prop key="show_sql">true</prop>
                <prop key="current_session_context_class">thread</prop>
            </props>
        </property>
    </bean>

  </beans>
